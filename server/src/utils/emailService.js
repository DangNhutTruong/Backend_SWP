import crypto from 'crypto';
import nodemailer from 'nodemailer';

// Generate random token
export const generateToken = (length = 32) => {
  return crypto.randomBytes(length).toString('hex');
};

// Generate email verification token
export const generateEmailVerificationToken = () => {
  return generateToken(32);
};

// Generate 6-digit OTP for email verification
export const generateEmailVerificationOTP = () => {
  return Math.floor(100000 + Math.random() * 900000).toString();
};

// Create Gmail transporter
const createTransporter = () => {
  return nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER, // Your Gmail address
      pass: process.env.EMAIL_PASS  // Your Gmail app password
    }
  });
};

// Send email function (real email)
export const sendEmail = async (to, subject, text, html) => {
  try {
    console.log('üìß Sending email to:', to);
    console.log('üìß Subject:', subject);
    console.log('üìß Checking Gmail credentials...');
    
    // Check Gmail credentials
    if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
      console.log('‚ùå EMAIL_USER or EMAIL_PASS not configured in .env');
      console.log(`‚ùå EMAIL_USER: ${process.env.EMAIL_USER || 'undefined'}`);
      console.log(`‚ùå EMAIL_PASS: ${process.env.EMAIL_PASS ? 'SET' : 'undefined'}`);
      console.log('üìß Email content:', text);
      return {
        success: false,
        message: 'Gmail credentials not configured',
        isSimulated: true
      };
    }

    console.log('‚úÖ Gmail credentials found');
    console.log(`üìß From: ${process.env.EMAIL_USER}`);
    
    const transporter = createTransporter();
    
    console.log('üìß Creating email...');
    const mailOptions = {
      from: `"NoSmoke App" <${process.env.EMAIL_USER}>`,
      to: to,
      subject: subject,
      text: text,
      html: html
    };
    
    console.log('üìß Sending via Gmail SMTP...');
    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Email sent successfully via Gmail!');
    console.log('üìß Message ID:', result.messageId);
    
    return {
      success: true,
      message: 'Email sent successfully via Gmail',
      messageId: result.messageId,
      isSimulated: false
    };
    
  } catch (error) {
    console.error('‚ùå Gmail send error:', error.message);
    console.error('‚ùå Full error:', error);
    
    // Fallback to simulation in case of error
    console.log('üìß Falling back to simulated email...');
    console.log('üìß Email content:', text);
    
    return {
      success: false,
      message: `Gmail error: ${error.message}`,
      error: error.message,
      isSimulated: true
    };
  }
};

// Send password reset email
// Send verification OTP email
export const sendVerificationOTP = async (user, otp) => {
  const subject = 'M√£ x√°c th·ª±c email - NoSmoke App';
  const text = `
    Xin ch√†o ${user.username},
    
    M√£ x√°c th·ª±c email c·ªßa b·∫°n l√†: ${otp}
    
    Vui l√≤ng nh·∫≠p m√£ n√†y v√†o trang x√°c th·ª±c ƒë·ªÉ ho√†n t·∫•t ƒëƒÉng k√Ω.
    M√£ c√≥ hi·ªáu l·ª±c trong 10 ph√∫t.
    
    N·∫øu b·∫°n kh√¥ng t·∫°o t√†i kho·∫£n n√†y, vui l√≤ng b·ªè qua email n√†y.
    
    Tr√¢n tr·ªçng,
    ƒê·ªôi ng≈© NoSmoke
  `;
  
  const html = `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
      <div style="text-align: center; margin-bottom: 30px;">
        <h1 style="color: #4CAF50; margin: 0;">NoSmoke</h1>
        <p style="color: #666; margin: 5px 0;">·ª®ng d·ª•ng h·ªó tr·ª£ cai thu·ªëc l√°</p>
      </div>
      
      <div style="background: #f8f9fa; padding: 30px; border-radius: 10px; text-align: center;">
        <h2 style="color: #333; margin-bottom: 20px;">M√£ x√°c th·ª±c email</h2>
        <p style="color: #555; margin-bottom: 30px;">Xin ch√†o <strong>${user.username}</strong>,</p>
        
        <div style="background: white; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <p style="color: #333; margin-bottom: 10px; font-size: 16px;">M√£ x√°c th·ª±c c·ªßa b·∫°n l√†:</p>
          <div style="font-size: 32px; font-weight: bold; color: #4CAF50; letter-spacing: 5px; margin: 15px 0;">
            ${otp}
          </div>
          <p style="color: #666; font-size: 14px;">M√£ c√≥ hi·ªáu l·ª±c trong 10 ph√∫t</p>
        </div>
        
        <p style="color: #555; line-height: 1.6;">
          Vui l√≤ng nh·∫≠p m√£ n√†y v√†o trang x√°c th·ª±c ƒë·ªÉ ho√†n t·∫•t ƒëƒÉng k√Ω.<br>
          N·∫øu b·∫°n kh√¥ng t·∫°o t√†i kho·∫£n n√†y, vui l√≤ng b·ªè qua email n√†y.
        </p>
      </div>
      
      <div style="text-align: center; margin-top: 30px; color: #888; font-size: 12px;">
        <p>¬© 2025 NoSmoke. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
      </div>
    </div>
  `;

  return await sendEmail(user.email, subject, text, html);
};

// Send password reset OTP email
export const sendPasswordResetOTP = async (user, otp) => {
  const subject = 'M√£ kh√¥i ph·ª•c m·∫≠t kh·∫©u - NoSmoke App';
  const text = `
    Xin ch√†o ${user.username},
    
    M√£ kh√¥i ph·ª•c m·∫≠t kh·∫©u c·ªßa b·∫°n l√†: ${otp}
    
    Vui l√≤ng nh·∫≠p m√£ n√†y v√†o trang ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.
    M√£ c√≥ hi·ªáu l·ª±c trong 10 ph√∫t.
    
    N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.
    
    Tr√¢n tr·ªçng,
    ƒê·ªôi ng≈© NoSmoke
  `;
  
  const html = `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
      <div style="text-align: center; margin-bottom: 30px;">
        <h1 style="color: #4CAF50; margin: 0;">NoSmoke</h1>
        <p style="color: #666; margin: 5px 0;">·ª®ng d·ª•ng h·ªó tr·ª£ cai thu·ªëc l√°</p>
      </div>
      
      <div style="background: #f8f9fa; padding: 30px; border-radius: 10px; text-align: center;">
        <h2 style="color: #333; margin-bottom: 20px;">Kh√¥i ph·ª•c m·∫≠t kh·∫©u</h2>
        <p style="color: #555; margin-bottom: 30px;">Xin ch√†o <strong>${user.username}</strong>,</p>
        
        <div style="background: white; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <p style="color: #333; margin-bottom: 10px; font-size: 16px;">M√£ kh√¥i ph·ª•c m·∫≠t kh·∫©u c·ªßa b·∫°n l√†:</p>
          <div style="font-size: 32px; font-weight: bold; color: #dc3545; letter-spacing: 5px; margin: 15px 0;">
            ${otp}
          </div>
          <p style="color: #666; font-size: 14px;">M√£ c√≥ hi·ªáu l·ª±c trong 10 ph√∫t</p>
        </div>
        
        <p style="color: #555; line-height: 1.6;">
          Vui l√≤ng nh·∫≠p m√£ n√†y v√†o trang ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.<br>
          N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.
        </p>
      </div>
      
      <div style="text-align: center; margin-top: 30px; color: #888; font-size: 12px;">
        <p>¬© 2025 NoSmoke. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
      </div>
    </div>
  `;

  return await sendEmail(user.email, subject, text, html);
};
